import java.util.*;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.security.*;
class VaultDoor8 {
    public static void main(String args[]) {
        Scanner b = new Scanner(System.in);
        System.out.print("Enter vault password: ");
        String c = b.next();
        String f = c.substring(8, c.length() - 1);
        VaultDoor8 a = new VaultDoor8();
        if (a.checkPassword(f)) {
            System.out.println("Access granted.");
        } else {
            System.out.println("Access denied!");
        }
    }
    public char[] scramble(String password) {
        /* Scramble a password by transposing pairs of bits. */
        char[] a = password.toCharArray();
        for (int b = 0; b < a.length; b++) {
            char c = a[b];           01234567
            c = switchBits(c, 1, 2); 02134567
            c = switchBits(c, 0, 3); 32104567
            c = switchBits(c, 5, 6); 32104657
            c = switchBits(c, 4, 7); 32107654
            c = switchBits(c, 0, 1); 23107654
            c = switchBits(c, 3, 4); 23170654
            c = switchBits(c, 2, 5); 23670154
            c = switchBits(c, 6, 7); 23670145
            a[b] = c;                01234567
        }                            45016723
        return a;
    }
    public char switchBits(char c, int p1, int p2) {
        /* Move the bit in position p1 to position p2, and move the bit
        that was in position p2 to position p1. Precondition: p1 < p2 */
        char mask1 = (char)(1 << p1);
        char mask2 = (char)(1 << p2); /* char mask3 = (char)(1<<p1<<p2); mask1++; mask1--; */
        char bit1 = (char)(c & mask1);
        char bit2 = (char)(c & mask2);
        /* System.out.println("bit1 " + Integer.toBinaryString(bit1));
System.out.println("bit2 " + Integer.toBinaryString(bit2)); */
        char rest = (char)(c & ~(mask1 | mask2));
        char shift = (char)(p2 - p1);
        char result = (char)((bit1 << shift) | (bit2 >> shift) | rest);
        return result;
    }
    public boolean checkPassword(String password) {
        char[] scrambled = scramble(password);
        char[] expected = {
            0xF4,
            0xC0,
            0x97,
            0xF0,
            0x77,
            0x97,
            0xC0,
            0xE4,
            0xF0,
            0x77,
            0xA4,
            0xD0,
            0xC5,
            0x77,
            0xF4,
            0x86,
            0xD0,
            0xA5,
            0x45,
            0x96,
            0x27,
            0xB5,
            0x77,
            0xF1,
            0xC1,
            0xD1,
            0xA5,
            0xD1,
            0xD2,
            0xD0,
            0xA4,
            0xC0
        };
        return Arrays.equals(scrambled, expected);
    }
}


>>> a = [0xF4,
...             0xC0,
...             0x97,
...             0xF0,
...             0x77,
...             0x97,
...             0xC0,
...             0xE4,
...             0xF0,
...             0x77,
...             0xA4,
...             0xD0,
...             0xC5,
...             0x77,
...             0xF4,
...             0x86,
...             0xD0,
...             0xA5,
...             0x45,
...             0x96,
...             0x27,
...             0xB5,
...             0x77,
...             0xF1,
...             0xC1,
...             0xD1,
...             0xA5,
...             0xD1,
...             0xD2,
...             0xD0,
...             0xA4,
...             0xC0]
>>> b = []
>>> for i in a:
...     x = f"{i:08b}"
...     b.append(int(x[4] + x[5] + x[0] + x[1] + x[6] + x[7] + x[2] + x[3], 2))
...
>>> "".join(map(chr, b))
's0m3_m0r3_b1t_sh1fTiNg_745f591b0'
